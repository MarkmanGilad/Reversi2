
function MinMax (state):
    visited = set()
    depth = 0
    return max_value (state, visited, depth)

function max_value (state, visited, depth):
    if depth = maxDepth or is_end_of_Game(state):
        value = evaluate(state) 
        return value, None

    value = MinScore
    bestAction = None
    for action in legal_actions(state):
        newState = get_next_state(state, action)
        if newState in visited:
            continue
        visited.add(newState)
        newValue, newAction = min_value (newState, visited, depth+1)
        if newValue  > value:
            value = newValue
            bestAction = action
    
    return value, bestAction

function min_value (state, visited, depth):
    if depth = maxDepth or is_end_of_Game(state):
        value = evaluate(state) 
        return value, None

    value = MinScore
    bestAction = None
    for action in legal_actions(state):
        newState = get_next_state(state, action)
        if newState in visited:
            continue
        visited.add(newState)
        newValue, newAction = min_value (newState, visited, depth+1)
        if newValue  < value:
            value = newValue
            bestAction = action
    
    return value, bestAction


